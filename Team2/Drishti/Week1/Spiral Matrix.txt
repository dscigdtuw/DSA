class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
          vector<int>ans;
        if(matrix.size()==0) return ans;
        int t,b,l,r,dir;
        t=0;
        b=matrix.size()-1;
        l=0;
        r=matrix[0].size()-1;
        dir=0;
        
        while(t<=b && l<=r){
            if(dir==0){
                for(int i=l;i<=r;i++) ans.push_back(matrix[t][i]);
                t++;
            }else if(dir==1){
                for(int i=t;i<=b;i++) ans.push_back(matrix[i][r]);
                r--;
            }else if(dir==2){
                for(int i=r;i>=l;i--) ans.push_back(matrix[b][i]);
                b--;
            }else{
                for(int i=b;i>=t;i--) ans.push_back(matrix[i][l]);
                l++;
            }
            dir=(dir+1)%4;
        }
        return ans;
    }
};

Time Complexity: O(n2)
Space Complexity: O(n) //for ans array