class Solution {
    public List<List<Integer>> generate(int numRows) {
    List<List<Integer>> tri = new ArrayList<>();
	if (numRows == 0)
		return tri;
	tri.add(Collections.singletonList(1));
	if (numRows == 1)
		return tri;
	tri.add(Arrays.asList(new Integer[]{1, 1}));
	if (numRows == 2)
		return tri;
	
	for (int i = 2; i < numRows; i++) {
		List<Integer> row = new ArrayList<>(i);
		row.add(0, 1);
		for (int j = 1; j < i; j++) {
			List<Integer> previousRow = tri.get(i - 1);
			int topLeft = previousRow.get(j - 1);
			int topRight = previousRow.get(j);
			row.add(j, topLeft + topRight);
		}
		row.add(1);
		tri.add(row);
	}
	return tri;  
}
}