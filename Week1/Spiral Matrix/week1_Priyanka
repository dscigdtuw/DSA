class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> list = new ArrayList<>();
		int rs = 0;
		int re = matrix.length - 1;
		int cs = 0;
		int ce = matrix[0].length - 1;
		while (rs <= re && cs <= ce) {
			// go right
			for (int i = cs; i <= ce; i++) {
				list.add(matrix[rs][i]);
			}
			rs++;
			// go down
			for (int i = rs; i <= re; i++) {
				list.add(matrix[i][ce]);
			}
			ce--;
			if (rs <= re) {
				// go left
				for (int i = ce; i >= cs; i--) {
					list.add(matrix[re][i]);
				}
				re--;
			}
			if (cs <= ce) {
				// go up
				for (int i = re; i >= rs; i--) {
					list.add(matrix[i][cs]);
				}
				cs++;
			}
		}
		return list;
        
    }
}
